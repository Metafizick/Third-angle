// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thrid_angle.Database.RestAPI.Database;

#nullable disable

namespace Thrid_angle.Database.RestAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230718074326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.Baskets", b =>
                {
                    b.Property<Guid>("IdBasket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreationBasket")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUbdateBasket")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdBook")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUser")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PricePerBook")
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityBooks")
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.HasKey("IdBasket");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.BookCard", b =>
                {
                    b.Property<Guid>("IdBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorBook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreationBook")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdateBook")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionBook")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("GenreBook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameBook")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("PhotoBook")
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PriceBook")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecieptDateBook")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorCodeBook")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdBook");

                    b.ToTable("BookCard");
                });

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.OrderCard", b =>
                {
                    b.Property<Guid>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreationOrderCard")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdateOrderCard")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUsers")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderCardBooksList")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusOrderCard")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdOrder");

                    b.ToTable("OrderCard");
                });

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.QuoteCard", b =>
                {
                    b.Property<Guid>("IdQuote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreationQuote")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdateQuote")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteAutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("IdQuote");

                    b.ToTable("QuoteCard");
                });

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.RequestCard", b =>
                {
                    b.Property<Guid>("IdRequestCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentTextCard")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRequestCreation")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateRequestUpdation")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdBook")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdUser")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberStars")
                        .HasMaxLength(10)
                        .HasColumnType("INTEGER");

                    b.HasKey("IdRequestCard");

                    b.ToTable("RequestCard");
                });

            modelBuilder.Entity("Thrid_angle.Database.RestAPI.DTO.UserCard", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressUser")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("AgeUser")
                        .HasMaxLength(100)
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreationUser")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FloorUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SurnameUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TelephoneUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDateUser")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUser");

                    b.ToTable("UserCard");
                });
#pragma warning restore 612, 618
        }
    }
}
